name: CI Tests
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main

jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=3m
  go-test:
    strategy:
      matrix:
        go-version: [1.23.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: go tests
        run: go test -v -covermode=count -json ./... > test.json
      - name: annotate go tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json
  # test:
  #   runs-on: ubuntu-latest
  #   services:
  #     freeipa:
  #       image: quay.io/freeipa/freeipa-server:almalinux-10
  #       ports:
  #         - "389:389"
  #         - "636:636"
  #       env:
  #         PASSWORD: Secret123
  #   env:
  #     BATON_PASSWORD: Secret123
  #     BATON_BIND_DN: 'uid=admin,cn=users,cn=accounts,dc=example,dc=test'
  #     BATON_URL: 'ldaps://freeipa'
  #     BATON_INSECURE_SKIP_VERIFY: true
  #   steps:
  #     - name: Install Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: 1.23.x
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Setup node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '21.x'
  #     - name: Setup FreeIPA
  #       run: |
  #         docker ps -a
  #         docker exec $(docker ps --filter='ancestor=quay.io/freeipa/freeipa-server:almalinux-10' --format='{{.ID}}') bash -c 'ipa-server-install -r EXAMPLE.TEST --no-ntp --no-ui-redirect --unattended'
  #     - name: Install baton
  #       run: ./scripts/get-baton.sh && mv baton /usr/local/bin
  #     - name: Build baton-ipa
  #       run: go build ./cmd/baton-ipa
  #     - name: Run baton-ipa
  #       run: ./baton-ipa
  #     - name: List grants
  #       run: baton grants
      # - name: Test grant/revoking posixGroup entitlements
      #   env:
      #     BATON: baton
      #     BATON_LDAP: ./baton-ipa
      #     BATON_ENTITLEMENT: "group:cn=testgroup00000,dc=example,dc=org:member"
      #     BATON_PRINCIPAL: "cn=testuser00099@example.com,dc=example,dc=org"
      #     BATON_PRINCIPAL_TYPE: "user"
      #   run: ./scripts/grant-revoke.sh
      # - name: Test grant/revoking groupOfUniqueNames entitlements
      #   env:
      #     BATON: baton
      #     BATON_LDAP: ./baton-ipa
      #     BATON_ENTITLEMENT: "group:cn=othertestgroup00000,dc=example,dc=org:member"
      #     BATON_PRINCIPAL: "cn=testuser00099@example.com,dc=example,dc=org"
      #     BATON_PRINCIPAL_TYPE: "user"
      #   run: ./scripts/grant-revoke.sh
